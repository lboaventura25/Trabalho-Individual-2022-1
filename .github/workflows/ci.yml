# This is a CI worflow to check Build, Test and Lint to library project

name: CI - Library

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      # Runs build of application with docker-compose
      - name: Run a detached mode build and up of project
        run: docker-compose up -d

  test-front:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Runs test of front with docker-compose
      - name: Run a `yarn ci:test` inside library-front container
        run: docker-compose run library-front yarn ci:test

  test-back:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Runs test of back with docker-compose
      - name: Start db container in detached mode to test back
        run: docker-compose up -d db

      # Runs test of back with docker-compose
      - name: Run a `python3 manage.py test` inside library-back container
        run: docker-compose up library-back
        env:
          CI: true

  lint-front:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Runs lint of front
      - name: Run a `npx eslint src/**/*.js --no-error-on-unmatched-pattern` on front
        run: |
          cd library_front
          yarn 
          npx eslint src/** --no-error-on-unmatched-pattern
